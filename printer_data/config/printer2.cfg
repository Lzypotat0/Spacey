# This file contains common pin mappings for the BigTreeTech Kraken.
# To use this config, the firmware should be compiled for the STM32H723Z6 with a "128KiB bootloader"
# Enable "extra low-level configuration options" and select the "25MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Kraken with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Kraken

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


[include fluidd.cfg]
[include KAMP_Settings.cfg]
[include ChamberLED.cfg]
[include Toolhead-LED.cfg]

[exclude_object]

[mcu]
canbus_uuid: 74cb72a7df5f

[mcu EBBCan]
canbus_uuid: 1d7c99a76c85
#canbus_uuid: e359957a6deb

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 5000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 7.5

#########################################################################
#####################  Temperature Monitor ##############################
#########################################################################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#[temperature_sensor Stepper_temp]
## Stepper Temperature - T1
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100

[temperature_sensor EBBCan]
sensor_type: temperature_host
min_temp: 0
max_temp: 100


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to Motor_1-S1
##  Endstop connected to MIN1
[stepper_x]
step_pin: PC14
dir_pin: !PC13
enable_pin: !PE6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PC15
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  TMC2160 configuration
[tmc5160 stepper_x]
cs_pin: PD6
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 0.800
stealthchop_threshold: 0
##  sensorless homing, plug in jumper on M2-DIAG
#diag1_pin: PC15

##  A Stepper - Right
##  Connected to Motor_2-S2
##  Endstop connected to MIN2
[stepper_y]
step_pin: PE5
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PF0
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  TMC2160 configuration
[tmc5160 stepper_y]
cs_pin: PD5
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 0.800
stealthchop_threshold: 0
##  sensorless homing, plug in jumper on M2-DIAG
#diag1_pin: PF0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to Motor_5-S5
##  Endstop connected to MIN3
[stepper_z]
step_pin: PG9
dir_pin: !PG10
enable_pin: !PG13
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 260
position_min: -5
homing_speed: 20
second_homing_speed: 3
homing_retract_dist: 3


##  TMC2160 configuration
[tmc5160 stepper_z]
cs_pin: PD2
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to Motor_6-S6
[stepper_z1]
step_pin: PG11
dir_pin: PD7
enable_pin: !PG12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  TMC2160 configuration
[tmc5160 stepper_z1]
cs_pin: PA15
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to Motor_7-S7
[stepper_z2]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  TMC2160 configuration
[tmc5160 stepper_z2]
cs_pin: PA9
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to Motor_8-S8
[stepper_z3]
step_pin: PG15
dir_pin: PB6
enable_pin: !PG14
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  TMC2160 configuration
[tmc5160 stepper_z3]
cs_pin: PA10
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

[extruder]
#############################################
# EBB36 CANBUS
#############################################

step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2

#############################################
rotation_distance: 22.854734448985 #sherpa mini 8GT
gear_ratio: 50:8      #sherpa mini - 8GT
microsteps: 32 #sherpa Mini
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.5
filament_diameter: 1.75
heater_pin: EBBCan: PB13
#sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_type: PT1000
sensor_pin: EBBCan: PA3
pullup_resistor: 2200
min_temp: -270
max_temp: 500
max_power: 0.8
min_extrude_temp: 0
max_extrude_only_distance: 100.0
pressure_advance: 0.028 ##	Try to keep pressure_advance below 1.0
pressure_advance_smooth_time: 0.040  ##	Default is 0.040, leave stock
max_extrude_cross_section: 5



#####################################################################
#   MAX31865 | PT100/1000 Sensor
#####################################################################

#sensor_type: MAX31865
#sensor_pin: EBBCan:PA4
#spi_bus: spi1
#rcatd_nominal_r: 1000
#rtd_reference_r: 4300
#rtd_num_of_wires: 2
#rtd_use_50hz_filter: True


##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
#uart_pin: PE1 ###BTT OCTOPUS MCU###
uart_pin: EBBCan: PA15 ###EBB36 CANBUS###
interpolate: false
run_current: 0.3
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - THB
[heater_bed]
heater_pin: PF5
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104GT-2
control: watermark
sensor_pin: PB0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe - DIAG7
##  This probe is not used for Z height, only Quad Gantry Leveling
#pin: ^EBBCan: PB9 #Klicky probe pin
pin: ^EBBCan: PB9
x_offset: 0
y_offset: 19.75 #klicky
#y_offset: 0 #TAP
z_offset: 5 #klicky/TAP
speed: 150.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.025
samples_tolerance_retries: 5

#####################################################################
#   Probe - TAP
#####################################################################

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}
    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
           { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - CNC_FAN0
pin: EBBCan: PA0
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.05

[heater_fan hotend_fan]
##  Hotend Fan - CNC_FAN1
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PA2
kick_start_time: 0.5
heater: heater_bed

##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PA.
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
#  XY Location of the Z Endstop Switch
#  Update -10,-10 to the XY coordinates of your endstop pin 
#  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:150,150
speed:100
z_hop:10
z_hop_speed:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
   -60,-10
   360,370
points:
   50,50
   50,250
   250,250
   250,50
speed: 300
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 20

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic

#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0